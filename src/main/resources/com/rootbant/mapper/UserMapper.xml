<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.rootbant.mapper.UserMapper">
    <resultMap id="userMap" type="SysUser">
        <id property="id" column="id"/>
        <result property="userName" column="user_name"/>
        <result property="userEmail" column="user_email"/>
        <result property="userPassword" column="user_password"/>
        <result property="userInfo" column="user_info"/>
        <result property="headImg" column="head_img" jdbcType="BLOB"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <select id="selectById" resultType="SysUser">
        select *
        from sys_user
        where id = #{id}
    </select>
    <select id="selectAll" resultType="SysUser">
        select *
        from sys_user
    </select>

    <select id="selectRolesByUserId" resultType="SysRole">
        select r.id,
               r.role_name     roleName,
               r.enabled,
               r.create_by     createBy,
               r.create_time   createTime,
               u.user_name  as "sysUser.userName",
               u.user_email as "sysUser.userEmail"
        from sys_user u
                 inner join sys_user_role ur on u.id = ur.user_id
                 inner join sys_role r on ur.role_id = r.id
        where u.id = #{userId}
    </select>

    <insert id="insert" parameterType="SysUser">
        insert into sys_user(id, user_name, user_password, user_email, user_info, head_img, create_time)
        values (#{id}, #{userName}, #{userPassword}, #{userEmail}, #{userInfo}, #{headImg,jdbcType=BLOB},
                #{createTime,jdbcType=TIMESTAMP})
    </insert>


    <insert id="insertBack" useGeneratedKeys="true" keyProperty="id" >
        insert into sys_user( user_name, user_password, user_email, user_info, head_img, create_time)
        values ( #{userName}, #{userPassword}, #{userEmail}, #{userInfo}, #{headImg,jdbcType=BLOB},
                #{createTime,jdbcType=TIMESTAMP})
    </insert>


    <insert id="insertBackLong">
        insert into sys_user(id, user_name, user_password, user_email, user_info, head_img, create_time)
        values (#{id}, #{userName}, #{userPassword}, #{userEmail}, #{userInfo}, #{headImg,jdbcType=BLOB},
        #{createTime,jdbcType=TIMESTAMP});

        <selectKey keyProperty="id" keyColumn="id" resultType="long" order="AFTER">
            select last_insert_id()
        </selectKey>
    </insert>

    <update id="updateById">
        update sys_user
        set user_name=#{userName},
            user_email=#{userEmail},
            user_password=#{userPassword},
            user_info=#{userInfo},
            head_img=#{headImg,jdbcType=BLOB},
            create_time=#{createTime,jdbcType=TIMESTAMP}
        where id = #{id}
    </update>
    <delete id="deleteById">
        delete
        from sys_user
        where id = #{id}
    </delete>
    <select id="slectRolesByUserIdAndRoleEnabled" resultType="com.rootbant.entity.SysRole">
        select r.id,
               r.role_name,
               r.enabled,
               r.create_by,
               r.create_time
                from sys_user u
                inner join sys_user_role ur on ur.user_id =u.id
                inner join sys_role r on r.id=ur.role_id
        where u.id=#{arg0} and r.enabled=#{arg1}
    </select>
    <select id="slectRolesByUserIdAndRoleEnabled2" resultType="com.rootbant.entity.SysRole">
        select r.id,
               r.role_name,
               r.enabled,
               r.create_by,
               r.create_time
        from sys_user u
                 inner join sys_user_role ur on ur.user_id =u.id
                 inner join sys_role r on r.id=ur.role_id
        where u.id=#{user.id}  and r.enabled=#{role.id}
    </select>
</mapper>